[project]
name = "demo-streamer"
version = "0.1.0"
description = "Robot data streaming demo for FortyFive ML Dashboard"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "msgpack>=1.0.8",
    "aiohttp>=3.9.5",
    "websockets>=12.0",
    "pydantic>=2.7.4",
    "numpy>=1.26.4",
    "pillow>=10.3.0",
    "opencv-python>=4.10.0",
    "aioboto3>=13.1.1",
    "motor>=3.4.0",
    "redis[hiredis]>=5.0.7",
    "typing-extensions>=4.12.2",
    "pyyaml>=6.0.1",
    "click>=8.1.7",
    "rich>=13.7.1",
    "structlog>=24.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.7",
    "pytest-cov>=5.0.0",
    "mypy>=1.10.1",
    "ruff>=0.5.0",
    "black>=24.4.2",
    "ipython>=8.25.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[dependency-groups]
dev = [
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.7",
    "pytest-cov>=5.0.0",
    "mypy>=1.10.1",
    "ruff>=0.5.0",
    "black>=24.4.2",
    "ipython>=8.25.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.isort]
known-first-party = ["demo_streamer"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "msgpack.*",
    "motor.*",
    "aioboto3.*",
    "cv2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=demo_streamer",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.coverage.run]
source = ["demo_streamer"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]